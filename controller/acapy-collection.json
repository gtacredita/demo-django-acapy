{
	"info": {
		"_postman_id": "b8a4a2e7-7f2d-4d48-af66-8bcac5e1e9c0",
		"name": "ACAPY Controller - Faber Communication",
		"description": "A collection for testing the Flask ACAPY Controller that communicates with Faber agent.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Connection Management",
			"item": [
				{
					"name": "Get Agent Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"status"
							]
						},
						"description": "Check if the agent is running properly"
					},
					"response": []
				},
				{
					"name": "List Connections",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/connections",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"connections"
							]
						},
						"description": "List all connections"
					},
					"response": []
				},
				{
					"name": "Get Connection by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/connections/{{connectionId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"connections",
								"{{connectionId}}"
							]
						},
						"description": "Get details for a specific connection"
					},
					"response": []
				},
				{
					"name": "Create Invitation (Out-of-Band)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"alias\": \"Alice\",\n    \"auto_accept\": true,\n    \"multi_use\": false\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/out-of-band/create-invitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"out-of-band",
								"create-invitation"
							]
						},
						"description": "Create a new out-of-band invitation"
					},
					"response": []
				},
				{
					"name": "Create Public Invitation (Out-of-Band)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"alias\": \"Faber\",\n    \"auto_accept\": true,\n    \"multi_use\": false\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/out-of-band/create-invitation/public",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"out-of-band",
								"create-invitation",
								"public"
							]
						},
						"description": "Create a new out-of-band invitation using a public DID"
					},
					"response": []
				},
				{
					"name": "Receive Invitation (Out-of-Band)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"@type\": \"https://didcomm.org/out-of-band/1.0/invitation\",\n    \"@id\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n    \"label\": \"Bob\",\n    \"handshake_protocols\": [\n        \"https://didcomm.org/didexchange/1.0\"\n    ],\n    \"services\": [\n        {\n            \"id\": \"#inline\",\n            \"type\": \"did-communication\",\n            \"recipientKeys\": [\n                \"did:key:z6MkmjY8GnV5i9YTDtPETC2uUAW6ejw3nk5mXF5yci5ab7th\"\n            ],\n            \"serviceEndpoint\": \"http://localhost:8020\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/out-of-band/receive-invitation?auto_accept=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"out-of-band",
								"receive-invitation"
							],
							"query": [
								{
									"key": "auto_accept",
									"value": "true"
								}
							]
						},
						"description": "Receive an out-of-band invitation"
					},
					"response": []
				},
				{
					"name": "Accept Invitation (DIDExchange)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"my_label\": \"MyAgent\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/didexchange/{{connectionId}}/accept-invitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"didexchange",
								"{{connectionId}}",
								"accept-invitation"
							]
						},
						"description": "Accept an invitation using DID Exchange protocol"
					},
					"response": []
				},
				{
					"name": "Accept Request (DIDExchange)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"my_endpoint\": \"http://my-endpoint:8020\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/didexchange/{{connectionId}}/accept-request",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"didexchange",
								"{{connectionId}}",
								"accept-request"
							]
						},
						"description": "Accept a connection request using DID Exchange protocol"
					},
					"response": []
				},
				{
					"name": "Send Message",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"content\": \"Hello, how are you?\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/connections/{{connectionId}}/send-message",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"connections",
								"{{connectionId}}",
								"send-message"
							]
						},
						"description": "Send a basic message to a connection"
					},
					"response": []
				}
			],
			"description": "Endpoints for managing connections with other agents"
		},
		{
			"name": "Credential Issuance",
			"item": [
				{
					"name": "Issue Credential (v1)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"connection_id\": \"{{connectionId}}\",\n    \"credential_proposal\": {\n        \"@type\": \"issue-credential/1.0/credential-preview\",\n        \"attributes\": [\n            {\n                \"name\": \"name\",\n                \"value\": \"John Doe\"\n            },\n            {\n                \"name\": \"email\",\n                \"value\": \"john.doe@example.com\"\n            },\n            {\n                \"name\": \"degree\",\n                \"value\": \"Computer Science\"\n            },\n            {\n                \"name\": \"date\",\n                \"value\": \"2024-05-10\"\n            }\n        ]\n    },\n    \"auto_issue\": true,\n    \"auto_remove\": false,\n    \"comment\": \"Academic Credential\",\n    \"cred_def_id\": \"{{credDefId}}\",\n    \"issuer_did\": \"{{issuerDid}}\",\n    \"schema_id\": \"{{schemaId}}\",\n    \"schema_issuer_did\": \"{{schemaIssuerDid}}\",\n    \"schema_name\": \"academic_credential\",\n    \"schema_version\": \"1.0\",\n    \"trace\": false\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/issue-credential/create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"issue-credential",
								"create"
							]
						},
						"description": "Create and issue a credential using v1 protocol"
					},
					"response": []
				},
				{
					"name": "Issue Credential (v2)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"connection_id\": \"{{connectionId}}\",\n    \"filter\": {\n        \"indy\": {\n            \"cred_def_id\": \"{{credDefId}}\",\n            \"issuer_did\": \"{{issuerDid}}\",\n            \"schema_id\": \"{{schemaId}}\",\n            \"schema_issuer_did\": \"{{schemaIssuerDid}}\",\n            \"schema_name\": \"academic_credential\",\n            \"schema_version\": \"1.0\"\n        }\n    },\n    \"credential_preview\": {\n        \"@type\": \"https://didcomm.org/issue-credential/2.0/credential-preview\",\n        \"attributes\": [\n            {\n                \"name\": \"name\",\n                \"value\": \"John Doe\"\n            },\n            {\n                \"name\": \"email\",\n                \"value\": \"john.doe@example.com\"\n            },\n            {\n                \"name\": \"degree\",\n                \"value\": \"Computer Science\"\n            },\n            {\n                \"name\": \"date\",\n                \"value\": \"2024-05-10\"\n            }\n        ]\n    },\n    \"auto_issue\": true,\n    \"auto_remove\": false,\n    \"comment\": \"Academic Credential V2\",\n    \"trace\": false\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/issue-credential-2.0/create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"issue-credential-2.0",
								"create"
							]
						},
						"description": "Create and issue a credential using v2 protocol"
					},
					"response": []
				}
			],
			"description": "Endpoints for issuing verifiable credentials"
		},
		{
			"name": "Proof Presentation",
			"item": [
				{
					"name": "Request Proof (v1)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"connection_id\": \"{{connectionId}}\",\n    \"comment\": \"Please provide your academic credentials\",\n    \"proof_request\": {\n        \"name\": \"Academic Proof\",\n        \"version\": \"1.0\",\n        \"requested_attributes\": {\n            \"attr1_referent\": {\n                \"name\": \"name\",\n                \"restrictions\": [\n                    {\n                        \"cred_def_id\": \"{{credDefId}}\"\n                    }\n                ]\n            },\n            \"attr2_referent\": {\n                \"name\": \"degree\",\n                \"restrictions\": [\n                    {\n                        \"cred_def_id\": \"{{credDefId}}\"\n                    }\n                ]\n            }\n        },\n        \"requested_predicates\": {}\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/present-proof/request",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"present-proof",
								"request"
							]
						},
						"description": "Request a proof from a connection using v1 protocol"
					},
					"response": []
				},
				{
					"name": "Request Proof (v2)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"connection_id\": \"{{connectionId}}\",\n    \"comment\": \"Please provide your academic credentials\",\n    \"presentation_request\": {\n        \"indy\": {\n            \"name\": \"Academic Proof\",\n            \"version\": \"1.0\",\n            \"requested_attributes\": {\n                \"attr1_referent\": {\n                    \"name\": \"name\",\n                    \"restrictions\": [\n                        {\n                            \"cred_def_id\": \"{{credDefId}}\"\n                        }\n                    ]\n                },\n                \"attr2_referent\": {\n                    \"name\": \"degree\",\n                    \"restrictions\": [\n                        {\n                            \"cred_def_id\": \"{{credDefId}}\"\n                        }\n                    ]\n                }\n            },\n            \"requested_predicates\": {}\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/present-proof-2.0/request",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"present-proof-2.0",
								"request"
							]
						},
						"description": "Request a proof from a connection using v2 protocol"
					},
					"response": []
				}
			],
			"description": "Endpoints for requesting and verifying proofs"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:5000",
			"type": "string"
		},
		{
			"key": "connectionId",
			"value": "",
			"type": "string"
		},
		{
			"key": "credDefId",
			"value": "",
			"type": "string"
		},
		{
			"key": "issuerDid",
			"value": "",
			"type": "string"
		},
		{
			"key": "schemaId",
			"value": "",
			"type": "string"
		},
		{
			"key": "schemaIssuerDid",
			"value": "",
			"type": "string"
		}
	]
}